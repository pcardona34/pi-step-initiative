--- spordefs.ver1.m	2025-06-25 22:01:01.295730738 +0200
+++ spordefs.m	2025-06-25 22:09:30.661108726 +0200
@@ -12,25 +12,26 @@
 */
 
 /* Bibliotheken */
-
-#include "spordefs.h"					/* prototypen ( SP ) */
-
-#ifdef ATARI
+
+#include <stdlib.h>
+#include "spordefs.h"					/* prototypen ( SP ) */
+
+#ifdef ATARI
 	#include	<tos.h>
 	#include	<linea.h>
 #endif
-
+
 #ifdef NeXT
-	#include	"draw.h"
-#endif
-#ifdef GNUSTEP
-	#include "draw.h"
-#endif
-
+	#include	"draw.h"
+#endif
+#ifdef GNUSTEP
+	#include "draw.h"
+#endif
+
 /* Defines */
 
-extern int DIAGHT;
-
+extern int DIAGHT;
+
 #define		ZeroY		0		/* Nullpunkt der Y Achse */
 #define		OrigX		20		/* linker Rand bei 20 */
 
@@ -49,137 +50,137 @@
 
 void sysInit(void)
 {
-#ifdef ATARI
+#ifdef ATARI
 	oldSSP = Super(0L);				/* Supervisormodus fÅr sysTimer() */
 	HZ_200 = (long *) 0x4BA;		/* Systemtimer fÅr sysTimer() */
 	linea_init();
 	hide_mouse();
 	set_wrt_mode(REPLACE);
 	set_pattern(&linepatt, 0, 1);	/* Linienmuster fÅr vdiDSpore() */
-#endif
-
-	return;
+#endif
+
+	return;
 }
 
-
+
 void sysExit(void)
 {
-#ifdef ATARI
+#ifdef ATARI
 	Super((void *) oldSSP);			/* ZurÅck in Usermodus */
-#endif
-
-	return;
+#endif
+
+	return;
 }
 
-
+
 void drawSpore(int x, int y, int color, int pow )
 {
-#ifdef ATARI
+#ifdef ATARI
 	horizontal_line( x, abs( ZeroY - y ), x+2 );
-#endif
-#ifdef NeXT
-	cSetColor( color, pow );
-	cSetSpor( x, abs(ZeroY - y ) );
-#endif	
-#ifdef GNUSTEP
-        cSetColor( color, pow );
-        cSetSpor( x, abs(ZeroY - y ) );
-#endif
-	return;
+#endif
+#ifdef NeXT
+	cSetColor( color, pow );
+	cSetSpor( x, abs(ZeroY - y ) );
+#endif	
+#ifdef GNUSTEP
+        cSetColor( color, pow );
+        cSetSpor( x, abs(ZeroY - y ) );
+#endif
+	return;
 }
 
-
+
 void diagLine(int x1, int y1, int y2, int col )
 {
-#ifdef ATARI
+#ifdef ATARI
 	draw_line( x1, abs(ZeroY-y1), x2, abs(ZeroY-y1) );
-#endif
-#ifdef NeXT
-	cSetColor( col, 100 ); 
-	cSetLine( x1, y1, x1, y2 );
-#endif
-#ifdef GNUSTEP
-        cSetColor( col, 100 );
-        cSetLine( x1, y1, x1, y2 );
-#endif
-	return;
+#endif
+#ifdef NeXT
+	cSetColor( col, 100 ); 
+	cSetLine( x1, y1, x1, y2 );
+#endif
+#ifdef GNUSTEP
+        cSetColor( col, 100 );
+        cSetLine( x1, y1, x1, y2 );
+#endif
+	return;
 }
 
-
+
 void tosCls(void)
 {
-#ifdef ATARI
+#ifdef ATARI
 	Cconout(27);
 	Cconout(69);
-#endif
-
-	return;
+#endif
+
+	return;
 }
 
-
+
 void tosText(char *s)
 {
-#ifdef ATARI
+#ifdef ATARI
 	Cconws( s );
-#endif
-
-	return;
+#endif
+
+	return;
 }
-
+
 
 void tosSetPal(int *newp, int *savp)
 {
-#ifdef ATARI
+#ifdef ATARI
 	int a;
 
 	for (a = 0; a < 16; a++)
 	{
 		savp[ a ] = Setcolor( a, newp[ a ] );
 	}
-#endif
-	
-	return;
+#endif
+	
+	return;
 }
 
-
+
 long tosKeyTest(void)
 {
-#ifdef ATARI
+#ifdef ATARI
 	return Crawio( 0xFF );
-#endif
-#ifdef NeXT
-	return( 0 );
-#endif
-#ifdef GNUSTEP
-	return ( 0 );
-#endif
-}
+#endif
+#ifdef NeXT
+	return( 0 );
+#endif
+#ifdef GNUSTEP
+	return ( 0 );
+#endif
+}
+
 
 
-
 void tosCurs(int x, int y)
 {
 	char esc[5] = { 27, 'Y', 0, 0, 0 };
 
 	esc[2] = (char) y + 31;
 	esc[3] = (char) x + 31;
-#ifdef ATARI
+#ifdef ATARI
 	Cconws( esc );
-#endif
-
-	return;
+#endif
+
+	return;
 }
 
-
+
 long sysTimer(void)
 {
-#ifdef ATARI
+#ifdef ATARI
 	return *HZ_200;
-#endif
-#ifdef NeXT
-	return( 0 );
-#endif
-#ifdef GNUSTEP
-	return 0;
-#endif
+#endif
+#ifdef NeXT
+	return( 0 );
+#endif
+#ifdef GNUSTEP
+	return 0;
+#endif
 }
